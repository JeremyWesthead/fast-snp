name: Release package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  cargo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install pypa/build
        run: |
          python -m venv env
          source env/bin/activate
          pip install .
          python -m pip install build

      - name: Build a wheel
        run: |
          source env/bin/activate
          python -m build --outdir dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        run: |
          sudo apt install g++ python3 python3-dev python3-pip cmake python3-venv
          python -m venv env
          source env/bin/activate
          pip install .
      - name: Install pypa/build
        run: |
          source env/bin/activate
          python -m pip install build

      - name: Build a source tarball
        run: |
          source env/bin/activate
          python -m build --sdist --outdir dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      -
        name: Login to OCR
        uses: docker/login-action@v1 
        with:
          registry: lhr.ocir.io
          username: ${{ secrets.OCR_USERNAME }}
          password: ${{ secrets.OCR_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: environments/Dockerfile
          tags: |
            lhr.ocir.io/${{secrets.OCR_NAMESPACE}}/oxfordmmm/fn5:latest
            lhr.ocir.io/${{secrets.OCR_NAMESPACE}}/oxfordmmm/fn5:${{env.RELEASE_VERSION}}
          push: true
          no-cache: true
      -
        name: Docker digest
        run: echo ${{ steps.docker_build.outputs.digest }}
